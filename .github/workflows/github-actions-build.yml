name: Flowkind Kubernetes App Build
on: [push]
#defaults:
#  buildtype: development
env:
  build_type: development
jobs:
  Flowkind-App-Build-Actions:
    env:
      build_type: 'development'
    if: ${{ build_type == 'production' }}
    #    strategy:
#      matrix:
#        os: [ ubuntu-latest, macos-latest, windows-latest ]
#    runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: checking repository code
        uses: actions/checkout@v2.3.4
        with:
          ref: main
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
      - name: setting up jdk 17
        uses: actions/setup-java@v2.3.0
        with:
          distribution: 'adopt'
          java-version: '17'
          check-latest: true
      - name: starting docker-compose mysql
        run: docker-compose up -d mysql
      - name: starting docker-compose mongodb
        run: docker-compose up -d mongodb
      - name: build with gradle
        uses: gradle/gradle-build-action@v1.5.1
        with:
          arguments: clean build
          gradle-version: 7.2
      - name: 'Upload artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: build/libs
      - name: build images using docker-compose
        run: docker-compose build --parallel
      - name: running images
        run: docker-compose up -d
      - name: getting running process
        run: docker-compose ps
      - name: stopping the image
        run: docker-compose down
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
      - name: logging into github container registry
        run: echo ${{ secrets.MY_GITHUB_SECRET_TOKEN }} | docker login ghcr.io -u jatinderkumarchaurasia --password-stdin
      - name: pushing images into registry
        run: docker-compose push


